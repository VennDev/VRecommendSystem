---
services:
  # VRecommendation Application
  vrecommendation:
    build: .
    ports:
      - "2030:2030"
    environment:
#      - DATABASE_HOST=mysql
#      - DATABASE_PORT=3306
#      - DATABASE_USER=user
#      - DATABASE_PASSWORD=S3cur3P@ssw0rd123
#      - DATABASE_NAME=my_database
#      - REDIS_HOST=redis
      - KAFKA_BROKERS=kafka:9092
    depends_on:
#      mysql:
#        condition: service_started
#      redis:
#        condition: service_started
      kafka:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:2030/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs
    networks:
      - vrecommendation-network
    restart: unless-stopped

#  # MySQL Database
#  mysql:
#    image: mysql:8.0
#    environment:
#      MYSQL_ROOT_PASSWORD: S3cur3P@ssw0rd123
#      MYSQL_DATABASE: my_database
#      MYSQL_USER: user
#      MYSQL_PASSWORD: S3cur3P@ssw0rd123
#    volumes:
#      - mysql_data:/var/lib/mysql
#      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#    networks:
#      - vrecommendation-network
#    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  # Redis Cache
#  redis:
#    image: redis:7-alpine
#    volumes:
#      - redis_data:/data
#    networks:
#      - vrecommendation-network
#    restart: unless-stopped
#    healthcheck:
#      test: ["CMD", "redis-cli", "ping"]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - vrecommendation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kafka Message Broker
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECTION_TIMEOUT_MS: 6000
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT_MS: 6000
      KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: false
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - vrecommendation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 60s

  # Kafka UI (Optional - for monitoring)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_started  # Thay đổi từ service_healthy
    networks:
      - vrecommendation-network
    restart: unless-stopped

volumes:
#  mysql_data:
#  redis_data:
  kafka_data:
  zookeeper_data:
  zookeeper_logs:

networks:
  vrecommendation-network:
    driver: bridge